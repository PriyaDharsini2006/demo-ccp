datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          String       @id @default(uuid())
  fullName    String
  email       String       @unique
  password    String
  userType    UserType
  startups    Startup[]    // One-to-many relationship with Startup
  innovations Innovation[] // One-to-many relationship with Innovation
  session     Session?
  image       String?
}



model Invoice {
  id           String   @id @default(uuid())
  gstInfoId    String
  retPeriod    DateTime
  checksum     String?
  summaryType  String?
  totalRecords Int?
  totalTax     Float?
  actualTax    Float?
  totalValue   Float?
  profit       Float?
}

model Startup {
  id          String        @id @default(uuid())
  name        String
  mantra      String
  description String?
  type        SoftwareType?
  domain      Domain?
  vision      String?
  mission     String?
  imageURL    String?
  userId      String
  user        User          @relation(fields: [userId], references: [id], onDelete: Cascade)
   
  overview    Overview?
  
}

enum UserType {
  INVESTOR
  ENTREPRENEUR
  INNOVATOR
}

enum SoftwareType {
  APPLICATION
  SYSTEM
  PLATFORM
  OTHER
}

enum Domain {
  HEALTHCARE
  FINTECH
  EDUCATION
  ECOMMERCE
  OTHER
}

model Session {
  id           String   @id @default(uuid())
  userId       String   @unique
  sessionToken String   @unique
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Innovation {
  id           String   @id @default(uuid())
  title        String
  description  String
  detailedDesc String? // Detailed description of the innovation
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  innovatorId  String
  innovator    User     @relation(fields: [innovatorId], references: [id], onDelete: Cascade)
}

model Overview {
  id              String  @id @default(uuid())
  noOfEmployees   Int
  currentProjects Int
  prevProjects    Int
  fundsRaised     Int
  startupId       String  @unique
  startup         Startup @relation(fields: [startupId], references: [id], onDelete: Cascade)
}

model Admin {
  id    Int    @id @default(autoincrement())
  email String @unique
}
